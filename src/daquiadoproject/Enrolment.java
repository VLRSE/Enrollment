/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package daquiadoproject;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CSC
 */
public class Enrolment extends javax.swing.JFrame {

  String driver = "com.mysql.jdbc.Driver";
   String domain = "jdbc:mysql://localhost:3306/enrolment";
   String user = "root";
    String pass = "xxxx";
    Connection conn;
    int count = 0;
    Statement stm;
    ResultSet rs;
    
    public Enrolment() {
        initComponents();
        connect();
        loadStudent();
        loadTeacher();
        loadSubject();
        loadSchedule();
        loadTeachersSched() ;
        loadGrade();
    }
    private void connect(){
        try{
            Class.forName(driver);
            conn = DriverManager.getConnection(domain,user,pass);
        }catch(Exception e){
          JOptionPane.showMessageDialog(null, "connection error");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(500, 300));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Name", "Course"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTabbedPane1.addTab("Student", jScrollPane1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Teacher ID", "Name", "Department"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Teacher", jPanel2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject Code", "Description", "Units"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setName(""); // NOI18N
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setResizable(false);
            jTable3.getColumnModel().getColumn(1).setResizable(false);
            jTable3.getColumnModel().getColumn(2).setResizable(false);
        }

        jTabbedPane1.addTab("Subject", jScrollPane3);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Schedule ID", "Subject Code", "Teacher ID", "Time", "Room", "Day"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable4);
        if (jTable4.getColumnModel().getColumnCount() > 0) {
            jTable4.getColumnModel().getColumn(0).setResizable(false);
            jTable4.getColumnModel().getColumn(1).setResizable(false);
            jTable4.getColumnModel().getColumn(2).setResizable(false);
            jTable4.getColumnModel().getColumn(3).setResizable(false);
            jTable4.getColumnModel().getColumn(4).setResizable(false);
            jTable4.getColumnModel().getColumn(5).setResizable(false);
        }

        jTabbedPane1.addTab("Schedule", jScrollPane4);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Teacher ID", "Name", "Subject Code", "Description", "Units", "ScheduleTime", "Room", "Day"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTable6);
        if (jTable6.getColumnModel().getColumnCount() > 0) {
            jTable6.getColumnModel().getColumn(0).setResizable(false);
            jTable6.getColumnModel().getColumn(1).setResizable(false);
            jTable6.getColumnModel().getColumn(2).setResizable(false);
            jTable6.getColumnModel().getColumn(3).setResizable(false);
            jTable6.getColumnModel().getColumn(4).setResizable(false);
            jTable6.getColumnModel().getColumn(5).setResizable(false);
            jTable6.getColumnModel().getColumn(6).setResizable(false);
            jTable6.getColumnModel().getColumn(7).setResizable(false);
        }

        jTabbedPane1.addTab("Teacher's Load", jScrollPane6);

        jTable5.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 11)); // NOI18N
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Schedule ID", "Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable5);
        if (jTable5.getColumnModel().getColumnCount() > 0) {
            jTable5.getColumnModel().getColumn(0).setResizable(false);
            jTable5.getColumnModel().getColumn(1).setResizable(false);
            jTable5.getColumnModel().getColumn(2).setResizable(false);
        }

        jTabbedPane1.addTab("Grade", jScrollPane5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public void loadStudent() {
            count = 0;
            String strSQL = "SELECT * FROM enrolment.student";
            try {
                stm = conn.createStatement();
                rs = stm.executeQuery(strSQL);
                Vector v = null;
                DefaultTableModel m = (DefaultTableModel) this.jTable1.getModel();
                m.setRowCount(count);
                while (rs.next()) {
                ++count;
                v = new Vector();
//                 v.add(rs.getString(1));
                 v.add(rs.getInt("studid"));                             
                v.add(rs.getString("name"));
                v.add(rs.getString("course"));
                m.addRow(v);
                }
                m.getRowCount();
             } catch (Exception e) {
                 JOptionPane.showMessageDialog(null, e.toString());
               }
    }
    
      public void loadTeacher() {
            count = 0;
            String strSQL = "SELECT * FROM enrolment.teacher order by name";
            try {
                stm = conn.createStatement();
                rs = stm.executeQuery(strSQL);
                Vector v = null;
                DefaultTableModel m = (DefaultTableModel) this.jTable2.getModel();
                m.setRowCount(count);
                while (rs.next()) {
                ++count;
                v = new Vector();
//                 v.add(rs.getString(1));
                 v.add(rs.getString("teacherID"));                             
                v.add(rs.getString("name"));
                v.add(rs.getString("department"));
                m.addRow(v);
                }
                m.getRowCount();
             } catch (Exception e) {
                 JOptionPane.showMessageDialog(null, e.toString());
               }
    }
      public void loadSubject() {
            count = 0;
            String strSQL = "SELECT * FROM enrolment.subject";
            try {
                stm = conn.createStatement();
                rs = stm.executeQuery(strSQL);
                Vector v = null;
                DefaultTableModel m = (DefaultTableModel) this.jTable3.getModel();
                m.setRowCount(count);
                while (rs.next()) {
                ++count;
                v = new Vector();
//                 v.add(rs.getString(1));
                 v.add(rs.getString("subjcode"));                             
                v.add(rs.getString("description"));
                v.add(rs.getInt("units"));
                m.addRow(v);
                }
                m.getRowCount();
             } catch (Exception e) {
                 JOptionPane.showMessageDialog(null, e.toString());
               }
    }
      public void loadSchedule() {
            count = 0;
            String strSQL = "SELECT * FROM enrolment.schedule";
            try {
                stm = conn.createStatement();
                rs = stm.executeQuery(strSQL);
                Vector v = null;
                DefaultTableModel m = (DefaultTableModel) this.jTable4.getModel();
                m.setRowCount(count);
                while (rs.next()) {
                ++count;
                v = new Vector();
                 v.add(rs.getString("schedID"));
                 v.add(rs.getString("subjCode"));                             
                v.add(rs.getString("TeacherID"));
                v.add(rs.getString("time"));   
                v.add(rs.getString("room"));
                v.add(rs.getString("day"));
                m.addRow(v);
                }
                m.getRowCount();
             } catch (Exception e) {
                 JOptionPane.showMessageDialog(null, e.toString());
               }
    }
        public void loadTeachersSched() {
            count = 0;
            String strSQL = "Select a.teacherID, a.name, b.subjcode, b.description, b.units, c.time,\n" +
            " c.room, c.day from schedule c inner join subject b on c.subjcode = b.subjcode  \n" +
            " inner join teacher a on c.teacherID = a.teacherID  ";
            try {
                stm = conn.createStatement();
                rs = stm.executeQuery(strSQL);
                Vector v = null;
                DefaultTableModel m = (DefaultTableModel) this.jTable6.getModel();
                m.setRowCount(count);
                while (rs.next()) {
                ++count;
                v = new Vector();
//                 v.add(rs.getString(1));
                 v.add(rs.getString("teacherID")); 
                 v.add(rs.getString("name")); 
                v.add(rs.getString("subjCode"));
                  v.add(rs.getString("description"));
                    v.add(rs.getString("units"));
                        v.add(rs.getString("time"));
                      v.add(rs.getString("room"));
                        v.add(rs.getString("day"));
                
                m.addRow(v);
                }
                m.getRowCount();
             } catch (Exception e) {
                 JOptionPane.showMessageDialog(null, e.toString());
               }
    }
        
        public void loadGrade() {
            count = 0;
            String strSQL = "SELECT * FROM enrolment.grade";
            try {
                stm = conn.createStatement();
                rs = stm.executeQuery(strSQL);
                Vector v = null;
                DefaultTableModel m = (DefaultTableModel) this.jTable5.getModel();
                m.setRowCount(count);
                while (rs.next()) {
                ++count;
                v = new Vector();
//                 v.add(rs.getString(1));
                 v.add(rs.getInt("studid"));                             
                v.add(rs.getString("schedID"));
                  v.add(rs.getFloat("grade"));
                  
                
                m.addRow(v);
                }
                m.getRowCount();
             } catch (Exception e) {
                 JOptionPane.showMessageDialog(null, e.toString());
               }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Enrolment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Enrolment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Enrolment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Enrolment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Enrolment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    // End of variables declaration//GEN-END:variables
}
